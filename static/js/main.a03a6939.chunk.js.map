{"version":3,"sources":["Components/TodoItem.js","Components/TodoForm.js","Components/TodoMain.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","item","className","reminder","onDoubleClick","handleDouble","id","activity","onClick","handleClick","date","time","TodoForm","items","setItems","useState","uuidv4","newItem","setNewItem","toggleFormState","setToggleFormState","warningModal","setWarningModal","useEffect","window","addEventListener","handleModal","e","key","removeEventListener","style","background","type","value","onChange","target","createActivity","createDate","createTime","preventDefault","copyItems","slice","push","handleSubmit","TodoMain","event","updItems","filter","itemsWithReminder","map","currentTarget","length","marginTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a03a6939.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction TodoItem(props) {\r\n  const item = props.item;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={!item.reminder ? \"TodoItem\" : \"TodoItem active\"}\r\n        onDoubleClick={props.handleDouble}\r\n        id={item.id}\r\n      >\r\n        {item.activity}\r\n        <button id={item.id} onClick={props.handleClick}>\r\n          X\r\n        </button>\r\n        <div className=\"Time\">\r\n          {item.date} at {item.time}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction TodoForm(props) {\r\n  const items = props.items;\r\n  const setItems = props.setItems;\r\n\r\n  const [newItem, setNewItem] = useState({\r\n    id: uuidv4(),\r\n    activity: \"\",\r\n    time: \"\",\r\n    date: \"\",\r\n    reminder: false,\r\n  });\r\n\r\n  const [toggleFormState, setToggleFormState] = useState(false);\r\n\r\n  const [warningModal, setWarningModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (warningModal) {\r\n      window.addEventListener(\"click\", handleModal);\r\n      window.addEventListener(\"keydown\", (e) => {\r\n        if (e.key === \"Escape\") {\r\n          handleModal();\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", handleModal);\r\n    };\r\n  }, [warningModal]);\r\n\r\n  const toggleForm = () => {\r\n    setToggleFormState(!toggleFormState);\r\n  };\r\n  const createActivity = (e) => {\r\n    setNewItem({\r\n      ...newItem,\r\n      activity: e.target.value,\r\n    });\r\n  };\r\n  const createDate = (e) => {\r\n    setNewItem({\r\n      ...newItem,\r\n      date: e.target.value,\r\n    });\r\n  };\r\n  const createTime = (e) => {\r\n    setNewItem({\r\n      ...newItem,\r\n      time: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleModal = () => {\r\n    setWarningModal(false);\r\n  };\r\n\r\n  const createReminder = (e) => {\r\n    setNewItem({\r\n      ...newItem,\r\n      reminder: !newItem.reminder,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ((newItem.activity && newItem.date && newItem.time) === \"\") {\r\n      setWarningModal(true);\r\n      return;\r\n    }\r\n\r\n    const copyItems = items.slice(0);\r\n    copyItems.push(newItem);\r\n    setItems(copyItems);\r\n    setNewItem({\r\n      id: uuidv4(),\r\n      activity: \"\",\r\n      time: \"\",\r\n      date: \"\",\r\n      reminder: newItem.reminder,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={warningModal ? \"open-modal\" : \"modal\"}>\r\n        <span>Missing information!</span>\r\n        <button onClick={handleModal}>X</button>\r\n      </div>\r\n      <button\r\n        className=\"toggleButton\"\r\n        style={\r\n          toggleFormState\r\n            ? { background: \"rgb(91, 223, 91)\" }\r\n            : { background: \"red\" }\r\n        }\r\n        onClick={toggleForm}\r\n      >\r\n        {toggleFormState ? \"Open\" : \"Close\"}\r\n      </button>\r\n      <form className={toggleFormState ? \"hideForm\" : \"\"}>\r\n        <label>\r\n          Activity:\r\n          <input\r\n            type=\"text\"\r\n            value={newItem.activity}\r\n            onChange={(e) => createActivity(e)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Date:\r\n          <input\r\n            type=\"date\"\r\n            value={newItem.date}\r\n            onChange={(e) => createDate(e)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Time:\r\n          <input\r\n            type=\"time\"\r\n            value={newItem.time}\r\n            onChange={(e) => createTime(e)}\r\n          />\r\n        </label>\r\n        <label className=\"checkboxLabel\">\r\n          Set reminder:\r\n          <input\r\n            type=\"checkbox\"\r\n            onClick={(e) => createReminder(e)}\r\n            value={newItem.reminder}\r\n          />\r\n        </label>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Add Activity\"\r\n          onClick={(e) => handleSubmit(e)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction TodoMain() {\r\n  const [items, setItems] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      activity: \"Meeting\",\r\n      time: \"13:30\",\r\n      date: \"2021-03-11\",\r\n      reminder: true,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      activity: \"Chilling\",\r\n      time: \"15:00\",\r\n      date: \"2021-03-13\",\r\n      reminder: true,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      activity: \"Fitness\",\r\n      time: \"17:30\",\r\n      date: \"2021-03-14\",\r\n      reminder: false,\r\n    },\r\n  ]);\r\n\r\n  const handleClick = (event) => {\r\n    const updItems = items.filter((item) => {\r\n      return item.id !== event.target.id;\r\n    });\r\n\r\n    setItems(updItems);\r\n  };\r\n\r\n  const handleDouble = (event) => {\r\n    const itemsWithReminder = items.map((item) => {\r\n      if (event.currentTarget.id === item.id) {\r\n        item = { ...item, reminder: !item.reminder };\r\n      }\r\n\r\n      return item;\r\n    });\r\n    setItems(itemsWithReminder);\r\n  };\r\n\r\n  return (\r\n    <div className=\"TodoMain\">\r\n      <h2>To do list</h2>\r\n\r\n      <TodoForm items={items} setItems={setItems} />\r\n      {items.length === 0 ? (\r\n        <h2 style={{ marginTop: \"40px\" }}>There is no activity!</h2>\r\n      ) : (\r\n        items.map((item) => {\r\n          return (\r\n            <TodoItem\r\n              handleDouble={handleDouble}\r\n              item={item}\r\n              key={item.id}\r\n              handleClick={handleClick}\r\n            />\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default TodoMain;\r\n","import TodoMain from \"./Components/TodoMain\";\nimport \"./Components/Style/Style.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoMain />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}